name: ie-bank-infra

on:
  workflow_dispatch: #Allows you to manually trigger the workflow from the GitHub Actions tab.
  pull_request:
      branches:
        - main
  push:
      branches:
        - '*'
      paths-ignore:
        - 'scripts/'

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-A-DEV
  SUBSCRIPTION_ID_DEV: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: sofias
  REGISTRY_LOGIN_SERVER: sofiaacrdev.azurecr.io
  IMAGE_BASE_NAME: sofiacontainer
  WEBAPP_NAME_DEV: sofia-webapp
  
  KEY_VAULT_NAME: sofia-kv1


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Bicep linter
        run: az bicep build --file ./infraestructure/main.bicep

           
      - name: Upload Bicep build artifact
        uses: actions/upload-artifact@v3
        with:
          name: bicep-build
          path: ./infraestructure/main.bicep 
    
      # Checkout the repository to the runner.
      - name: Checkout
        uses: actions/checkout@v3
    

  deploy-infra:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
    steps:

      - name: Download Bicep build artifact
        uses: actions/download-artifact@v3
        with:
            name: bicep-build
    
        # Log into Azure
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Infrastructure
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION_ID_DEV }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
          template: ./infraestructure/main.bicep
          parameters: ./infraestructure/parameters/dev.parameters.json
  

  build-and-deploy-container:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: deploy-infra
    environment:
      name: 'Development'
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Get container registry credentials from vault"
        run: |
          REGISTRY_USERNAME=$(az keyvault secret show --name adminCredentialsKeyVaultSecretUserName --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          REGISTRY_PASSWORD=$(az keyvault secret show --name adminCredentialsKeyVaultSecretUserPassword1 --vault-name ${{ env.KEY_VAULT_NAME }} --query value -o tsv)
          echo "REGISTRY_USERNAME=${REGISTRY_USERNAME}" >> $GITHUB_ENV
          echo "REGISTRY_PASSWORD=${REGISTRY_PASSWORD}" >> $GITHUB_ENV

      - name: Set Image Version
        id: image-version
        run: echo "::set-output name=version::$(date +'%Y.%m.%d.%H.%M')"

      - name: Build and Push Image
        run: |
          docker build . -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
          docker login ${{ env.REGISTRY_LOGIN_SERVER }} -u ${{ env.REGISTRY_USERNAME }} -p ${{ env.REGISTRY_PASSWORD }}
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ steps.image-version.outputs.version }}
  
  deploy-container:
      runs-on: ubuntu-latest
      needs: build-and-deploy-container
      environment:
        name: 'Development'
      steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container to Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME_DEV }}
          images: |
            ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_BASE_NAME }}:${{ needs.build-and-deploy-container.outputs.image-version }}
  
            